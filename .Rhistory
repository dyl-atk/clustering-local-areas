##### Load libraries
library(tidyverse)
library(tidymodels)
read_excel()
library(readxl)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Import population density variable
population_density <- real_excel(population_density)
# Import population density variable
population_density <- read_excel(population_density)
library(tidyverse)
library(tidymodels)
library(readxl)
# Import population density variable
population_density <- read_excel(population_density)
# Import population density variable
population_density <- read_excel("population_density")
# Set working directory as current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Import population density variable
population_density <- read_excel("population_density.xlsx")
View(population_density)
### Age distribution variable
age_distribution <- real_excel("age_distribution.xlsx")
### Age distribution variable
age_distribution <- read_excel("age_distribution.xlsx")
View(age_distribution)
# Convert from long to wide table
age_distribution2 <- pivot_wider(names_from = "Age (3 catgeories)", values_from = "Observation")
View(age_distribution)
# Convert age categories from character to factor
age_distribution$`Age (3 categories)` <- as.factor(age_distribution$`Age (3 categories)`)
# Convert from long to wide table
age_distribution2 <- pivot_wider(names_from = "Age (3 catgeories)", values_from = "Observation")
# Import age distribution variable
age_distribution <- read_excel("age_distribution.xlsx")
# Import age distribution variable
age_distribution <- read_excel("age_distribution.xlsx")
# Convert from long to wide table
age_distribution2 <- age_distribution %>% pivot_wider(names_from = "Age (3 catgeories)", values_from = "Observation")
clean_names()
install.packages("janitor")
# Ensure attribute names are tidy
age_distribution <- age_distribution %>% clean_names()
library(janitor)
# Ensure attribute names are tidy
age_distribution <- age_distribution %>% clean_names()
# Convert from long to wide table
age_distribution2 <- age_distribution %>% pivot_wider(names_from = "age_3_categories", values_from = "observation")
View(age_distribution)
View(age_distribution2)
# Remove irrelevant attributes
age_distribution <- age_distribution %>% subset(select = - c(age_3_categories_code))
# Convert from long to wide table
age_distribution2 <- age_distribution %>% pivot_wider(names_from = "age_3_categories", values_from = "observation")
View(age_distribution)
age_distribution <- read_excel("age_distribution.xlsx")
# Ensure attribute names are tidy
age_distribution <- age_distribution %>% clean_names()
# Remove irrelevant attributes
age_distribution <- age_distribution %>% subset(select = - c(age_3_categories_code))
# Convert from long to wide table
age_distribution <- age_distribution %>% pivot_wider(names_from = "age_3_categories", values_from = "observation")
# Ensure attribute names are tidy
population_density <- population_density %>% clean_names()
# Ensure attribute names are tidy
age_distribution <- age_distribution %>% clean_names()
# Bring features to single dataframe
local_area_data <- full_join(age_distribution, population_density, by = "Westminster_parliamentary_constituencies")
##### Load libraries
library(tidyverse)
library(tidymodels)
library(readxl)
library(janitor)
# Bring features to single dataframe
local_area_data <- full_join(age_distribution, population_density, by = "Westminster_parliamentary_constituencies")
# Bring features to single dataframe
local_area_data <- full_join(age_distribution, population_density, by = "westminster_parliamentary_constituencies")
View(local_area_data)
# Create distinctive attribute names
population_density <- population_density %>% rename(population_density = observation)
library(tidyverse)
library(tidymodels)
library(readxl)
library(janitor)
# Set working directory as current file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Import population density variable
population_density <- read_excel("population_density.xlsx")
# Ensure attribute names are tidy
population_density <- population_density %>% clean_names()
# Create distinctive attribute names
population_density <- population_density %>% rename(population_density = observation)
View(population_density)
# Import age distribution variable
age_distribution <- read_excel("age_distribution.xlsx")
# Ensure attribute names are tidy
age_distribution <- age_distribution %>% clean_names()
# Remove irrelevant attributes
age_distribution <- age_distribution %>% subset(select = - c(age_3_categories_code))
# Convert from long to wide table
age_distribution <- age_distribution %>% pivot_wider(names_from = "age_3_categories", values_from = "observation")
# Ensure attribute names are tidy
age_distribution <- age_distribution %>% clean_names()
# Calculate total observations attribute
age_distribution <- age_distribution %>% mutate(total_observations = (aged_15_years_and_under + aged_16_to_64_years + aged_65_years_and_over))
# Convert age counts to proportions
age_distribution <- age_distribution %>% mutate_at(vars("aged_15_years_and_under", "aged_16_to_64_years", "aged_65_years_and_over"), ~ . / total_observations)
# Bring features to single dataframe
local_area_data <- full_join(age_distribution, population_density, by = "westminster_parliamentary_constituencies")
# Select only useful columns for clustering model
local_area_data <- local_area_data %>% select(westminster_parliamentary_constituencies)
# Bring features to single dataframe
local_area_data <- full_join(age_distribution, population_density, by = "westminster_parliamentary_constituencies")
# Select only useful columns for clustering model
local_area_data <- local_area_data %>% select(westminster_parliamentary_constituencies, aged_15_years_and_under, aged_16_to_64_years, aged_65_years_and_over, population_density)
is.na(local_area_data)
COUNT(is.na(local_area_data))
count(is.na(local_area_data))
na.count(local_area_data)
local_area_data %>% map(~ sum(is.na(.)))
# Check there is one row per constituency. There should be 573 constituencies in England and Wales
nrow(local_area_data)
View(local_area_data)
